quarkus.native.additional-build-args=-H:ResourceConfigurationFiles=resources-config.json
quarkus.ssl.native=true
quarkus.native.native-image-xmx=4G
#####################################################
#### DB
######################################################
quarkus.datasource.jdbc.url=jdbc:postgresql://postgresql:5432/gamedb
quarkus.datasource.jdbc.transaction-isolation-level=read-committed
quarkus.datasource.jdbc.new-connection-sql=SELECT 1
quarkus.datasource.jdbc.validation-query-sql=SELECT 1
quarkus.datasource.jdbc.min-size=10
quarkus.datasource.jdbc.max-size=20
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.initial-size=10
%prod.quarkus.datasource.jdbc.detect-statement-leaks=false
# Configure the AMQP connector to read from the `game-state` mc
%prod.amqp-host=skupper-messaging
%prod.amqp-port=5671
%dev.amqp-host=localhost
%dev.amqp-port=5671
%prod.skupper.messaging.ca.cert.path=/etc/messaging/ca.crt
%dev.skupper.messaging.ca.cert.path=/skupper/ca.crt
%prod.skupper.messaging.cert.path=/etc/messaging/tls.crt
%dev.skupper.messaging.cert.path=/skupper/tls.crt
%prod.skupper.messaging.key.path=/etc/messaging/tls.key
%dev.skupper.messaging.key.path=/skupper/tls.key
#game-state channel
mp.messaging.incoming.game-state.connector=smallrye-amqp
mp.messaging.incoming.game-state.address=mc/game
mp.messaging.incoming.game-state.client-options-name=skupper-amqp
mp.messaging.incoming.game-state.auto-acknowledgement=true
#Kafka Streams
quarkus.kafka-streams.application-id=leaderboard-messaging
quarkus.kafka-streams.topics=transactions
#kafka-streams pass-through
%prod.kafka-streams.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
%prod.kafka-streams.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
%prod.kafka-streams.default.deserialization.exception.handler=org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
%prod.kafka-streams.cache.max.bytes.buffering=10240
%prod.kafka-streams.commit.interval.ms=500
%prod.kafka-streams.metadata.max.age.ms=500
%prod.kafka-streams.auto.offset.reset=latest
%prod.quarkus.kafka-streams.bootstrap-servers=demo2020-kafka-bootstrap.kafka-demo:9092
# Logging
%dev.quarkus.log.category."io.smallrye.reactive.messaging".level=DEBUG
quarkus.log.console.color=false
%prod.quarkus.log.category."com.redhat.developers".level=FINE
%test.quarkus.log.category."com.redhat.developers".level=FINE
%dev.quarkus.log.category."com.redhat.developers".level=FINEST